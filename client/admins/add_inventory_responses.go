// Code generated by go-swagger; DO NOT EDIT.

package admins

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// AddInventoryReader is a Reader for the AddInventory structure.
type AddInventoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddInventoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewAddInventoryCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewAddInventoryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewAddInventoryConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAddInventoryCreated creates a AddInventoryCreated with default headers values
func NewAddInventoryCreated() *AddInventoryCreated {
	return &AddInventoryCreated{}
}

/*AddInventoryCreated handles this case with default header values.

item created
*/
type AddInventoryCreated struct {
}

func (o *AddInventoryCreated) Error() string {
	return fmt.Sprintf("[POST /inventory][%d] addInventoryCreated ", 201)
}

func (o *AddInventoryCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddInventoryBadRequest creates a AddInventoryBadRequest with default headers values
func NewAddInventoryBadRequest() *AddInventoryBadRequest {
	return &AddInventoryBadRequest{}
}

/*AddInventoryBadRequest handles this case with default header values.

invalid input, object invalid
*/
type AddInventoryBadRequest struct {
}

func (o *AddInventoryBadRequest) Error() string {
	return fmt.Sprintf("[POST /inventory][%d] addInventoryBadRequest ", 400)
}

func (o *AddInventoryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddInventoryConflict creates a AddInventoryConflict with default headers values
func NewAddInventoryConflict() *AddInventoryConflict {
	return &AddInventoryConflict{}
}

/*AddInventoryConflict handles this case with default header values.

an existing item already exists
*/
type AddInventoryConflict struct {
}

func (o *AddInventoryConflict) Error() string {
	return fmt.Sprintf("[POST /inventory][%d] addInventoryConflict ", 409)
}

func (o *AddInventoryConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
